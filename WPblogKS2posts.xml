<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" xmlns:media="http://search.yahoo.com/mrss/"
	>
    <channel>
        <title>Karen Snyder</title>
        <atom:link href="https://kdssnyder.wordpress.com/feed/" rel="self" type="application/rss+xml" />
        <link>https://kdssnyder.wordpress.com</link>
        <description>Return to development via Origin Coding Academy</description>
        <lastBuildDate>Sun, 22 Nov 2015 00:05:33 +0000</lastBuildDate>
        <language>en</language>
        <sy:updatePeriod>hourly</sy:updatePeriod>
        <sy:updateFrequency>1</sy:updateFrequency>
        <generator>http://wordpress.com/</generator>
        <cloud domain='kdssnyder.wordpress.com' port='80' path='/?rsscloud=notify' registerProcedure='' protocol='http-post' />
        <image>
            <url>https://s2.wp.com/i/buttonw-com.png</url>
            <title>Karen Snyder</title>
            <link>https://kdssnyder.wordpress.com</link>
        </image>
        <atom:link rel="search" type="application/opensearchdescription+xml" href="https://kdssnyder.wordpress.com/osd.xml" title="Karen Snyder" />
        <atom:link rel='hub' href='https://kdssnyder.wordpress.com/?pushpress=hub'/>
        <item>
            <title>Ninth Week in Coding Bootcamp: Continuing Group Project</title>
            <link>https://kdssnyder.wordpress.com/2015/11/21/ninth-week-in-coding-bootcamp-continuing-group-project/</link>
            <comments>https://kdssnyder.wordpress.com/2015/11/21/ninth-week-in-coding-bootcamp-continuing-group-project/#respond</comments>
            <pubDate>Sat, 21 Nov 2015 23:51:35 +0000</pubDate>
            <dc:creator>
                <![CDATA[kdssnyder]]>
            </dc:creator>
            <category>
                <![CDATA[Uncategorized]]>
            </category>
            <guid isPermaLink="false">http://kdssnyder.wordpress.com/?p=99</guid>
            <description>
                <![CDATA[On November 16 I started the ninth week at Origin Code Academy. I completed the assigned screens, and did some pair programming on the doctor screens. When we had all the basic screens done, we started to work on the automatic appointment scheduler part of the application. As this was a complex module that needed to&#8230;<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=kdssnyder.wordpress.com&#038;blog=101346606&#038;post=99&#038;subd=kdssnyder&#038;ref=&#038;feed=1" width="1" height="1" />]]>
            </description>
            <content:encoded>
                <![CDATA[<p>On November 16 I started the ninth week at <a href="http://origincodeacademy.com/" target="_blank">Origin Code Academy</a>. I completed the assigned screens, and did some pair programming on the doctor screens. When we had all the basic screens done, we started to work on the automatic appointment scheduler part of the application. As this was a complex module that needed to apply several rules in order to determine which doctor to schedule for a checked-in patient, we applied mob programming and were able to break down the problem and write the code to implement it in the application back end.</p><p>After we had completed the code for the appointment scheduler, Cameron suggested that we should write some test methods for it, rather than simply plugging it into the front end and then playing around with the application to test it.</p><p>This was not only an opportunity to work more with writing test methods, but also we learned from Cameron how to create an in-memory test double of the Entity Framework database, and inject that database context into the test methods (a great example of dependency injection!), so that we could avoid using the real database for our test methods. To create the test database context, we used the techniques discussed <a href="https://msdn.microsoft.com/en-us/data/dn314431.aspx" target="_blank">here</a>.</p><p>It is much better to have a test database that mocks the real database for test methods; we had been writing test methods that use the real database, which meant that a test method had to delete any test objects that it created, and if a test method failed, it was necessary to delete the test objects manually, via SQL server or the front end. Although implementing the test database took quite a bit of code, it was worth it.</p><p>We also learned how to use load masks in the front end, so that while a table is loading, a spinner is shown to indicate to the user that the loading is being performed, and they need to wait for it to complete. It was good that rather than having to spend time figuring out how to write a spinner in HTML/CSS/Javascript, we could use the pre-existing <a href="http://ngmodules.org/modules/angular-spinner" target="_blank">angular spinner</a>. It&#8217;s not that I don&#8217;t want the challenge of writing an animated spinner, it&#8217;s just that if we take time to write every detail that we need, then we have less time for other parts of the project. That&#8217;s why learning to code also consists of knowing how to use pre-existing components such as <a href="http://getbootstrap.com/" target="_blank">Bootstrap</a>, that help you get your website up and running faster.</p><p>By the end of the week, we were almost finished with the group project, and over the weekend we will do individual work on various features that need to be completed.</p><p>I also had the opportunity to do a presentation this week on Test-Driven Development (TDD) at the <a href="http://www.meetup.com/Origin-Code-Academy-Meetup/" target="_blank">Origin Code Academy meetup</a>. TDD is a software development method that consists of short cycles with the following phases:</p><ul><li>Red: Write a test for a feature that does not yet exist, therefore the test fails.</li><li>Green: Write the minimum code necessary to make the test pass.</li><li>Refactor: Clean up/reorganize the code.</li></ul><p>The above cycle is repeated until all the features have been added. The TDD approach results in a complete collection of tests for each feature, and tight efficient code that contains only the necessary code for each feature.</p><p>My presentation included a demonstration of TDD with a simple example of a Calculator class with methods for adding, subtracting, etc. My lovely assistant Adriann stood with me for the presentation, and ran the demo with me, so that we could demonstrate ping-pong pair programming in TDD. This meant that first I wrote a failing test (red phase), then Adriann wrote the minimum code needed to make the test pass (green phase), and then I cleaned up the code (refactor phase). In the next cycle, Adriann wrote the failing test, and then I made it pass, and so on.</p><p>By the way, I don&#8217;t know if there is a saying that if a demo can go wrong, it will, but there should be a saying like that! Yes, of course there was a problem with the demo, and luckily Cameron jumped in to help it get back on track.</p><p>One of the most interesting parts about the presentation was that I actually received quite a few questions about testing in general, so I had the opportunity to explain the importance of unit testing, and having a collection of tests that can be automatically run for an application.</p><p>We had two guest speakers this week. The first was Abinathab John Roy Bennet, senior program manager at <a href="https://www.microsoft.com/en-us/" target="_blank">Microsoft</a> in Seattle. He has extensive developer experience and only recently made the change to be a program manager, so he had some good advice for us.</p><p>The second speaker was Mike Glanz, CEO and co-founder of <a href="http://www.hireahelper.com" target="_blank">Hire A Helper</a>. He talked about what junior developers need to do to prove to prospective employers that it is worth it to hire them, and gave us a lot of food for thought.</p><p>&nbsp;</p><br /><a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/kdssnyder.wordpress.com/99/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/kdssnyder.wordpress.com/99/" /></a><img alt="" border="0" src="https://pixel.wp.com/b.gif?host=kdssnyder.wordpress.com&#038;blog=101346606&#038;post=99&#038;subd=kdssnyder&#038;ref=&#038;feed=1" width="1" height="1" />]]>
            </content:encoded>
            <wfw:commentRss>https://kdssnyder.wordpress.com/2015/11/21/ninth-week-in-coding-bootcamp-continuing-group-project/feed/</wfw:commentRss>
            <slash:comments>0</slash:comments>
            <media:content url="https://2.gravatar.com/avatar/ea7b7ac75f0e1b895abfbc3f9b76ebdf?s=96&#38;d=identicon&#38;r=G" medium="image">
                <media:title type="html">kdssnyder</media:title>
            </media:content>
        </item>
        <item>
            <title>Eighth Week in Coding Bootcamp: Group Project with Mob Programming and Pair Programming</title>
            <link>https://kdssnyder.wordpress.com/2015/11/15/eighth-week-in-coding-bootcamp-group-project-with-mob-programming-and-pair-programming/</link>
            <comments>https://kdssnyder.wordpress.com/2015/11/15/eighth-week-in-coding-bootcamp-group-project-with-mob-programming-and-pair-programming/#respond</comments>
            <pubDate>Sun, 15 Nov 2015 20:15:25 +0000</pubDate>
            <dc:creator>
                <![CDATA[kdssnyder]]>
            </dc:creator>
            <category>
                <![CDATA[Uncategorized]]>
            </category>
            <guid isPermaLink="false">http://kdssnyder.wordpress.com/?p=81</guid>
            <description>
                <![CDATA[November 9 was the start of the eighth week in coding bootcamp. This week we were assigned a medical scheduling application as a group project. We used Agile project management, with a Trello board to implement Scrum. This means using an efficient software development methodology to break down a complex software system into more manageable components, and analyze the process continuously&#8230;<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=kdssnyder.wordpress.com&#038;blog=101346606&#038;post=81&#038;subd=kdssnyder&#038;ref=&#038;feed=1" width="1" height="1" />]]>
            </description>
            <content:encoded>
                <![CDATA[<p>November 9 was the start of the eighth week in coding bootcamp. This week we were assigned a medical scheduling application as a group project. We used <a href="http://www.dummies.com/how-to/content/agile-project-management-for-dummies-cheat-sheet.html" target="_blank">Agile project management</a>, with a <a href="https://trello.com/" target="_blank">Trello</a>board to implement <a href="https://www.scrum.org/resources/what-is-scrum" target="_blank">Scrum</a>. This means using an efficient software development methodology to break down a complex software system into more manageable components, and analyze the process continuously to find ways of improving it.</p><p>Basically, the medical scheduling application contains exam rooms, and doctors and patients who check in. When a doctor checks in, that doctor becomes available for appointments. When a patient checks in, the system automatically assigns an appointment to that patient with a checked-in doctor and an available exam room. Our first task for the group project was to analyze the user stories that our teacher had placed on the project backlog on the Trello board. (A user story describes something that a user would like to be able to do with the system.) After understanding what the application would need to do, we decided what database tables would be needed, and what Web screens would be needed. We put each of these components on a card on the project backlog, decided what the estimated effort was, and then planned the first sprint, which included creating the SQL database tables via Entity Framework code first, and writing a Web API for each table. The Web APIs needed to include unit tests, so that every time we made a change we could run all the unit tests to check that everything was still working.</p><p>Then it was time for us to do mob programming! Mob programming is a technique where one person sits at the computer keyboard, and the rest of the team collaborate to tell the keyboarder what to input. This helps to keep everybody involved in the project details, and harnesses everybody&#8217;s brainpower to tackle the problem and come up with a solution. We used mob programming to set up the Web API project with Entity Framework to define the database tables and generate the database. This took a few iterations before we successfully generated the database, as we needed to precisely specify the primary key and foreign key relationships between the various tables in order for the generation to work. Then we continued with mob programming to write the Web API controllers for the doctor database table, including the unit tests, as not everybody in the class was familiar with writing unit tests. Unit tests for Web APIs are somewhat complex, as it is necessary to first verify that the result is the expected HTTP status code, and then it is necessary to extract the content from the HTTP result body in order to verify that it is the correct content.</p><p>Once we had the first Web API controller done, we split up the other Web controllers. I was assigned the patient database table controllers; I also did some pair programming on the doctor check-in controllers. For the patient controllers, when I got to the delete patient method, I wondered if deleting a patient record meant also deleting any corresponding records in other tables, such as appointments or check-ins for that patient. In a group discussion, we realized that instead of removing a patient from the database, we needed to archive the patient, and we needed to do the same for doctors. This meant that we needed to add an archived indicator to the patient and doctor tables, which gave us the opportunity to learn about using Entity Framework migration to modify an existing database.</p><p>This group project also gave us the opportunity to practice <a href="https://github.com/" target="_blank">GitHub</a> workflow, which involves a master branch containing production code that has been verified as working, and then each of us creates a branch for the feature that we are writing. When the new feature has been verified to work, the feature branch is merged with the master branch. There was a bit of a learning curve where we had to learn how to handle merge conflicts, but we got the hang of it.</p><p>It was a great feeling to move the cards on the Trello board from current sprint to done, as we completed the Web API controllers. Once that sprint was done, we planned the next sprint, which would include the Web screens, implemented as a single-page application and built with <a href="https://angularjs.org/" target="_blank">AngularJS</a>. I took the administration screens for my assignment, as they involved using <a href="https://github.com/angular-ui/ui-router" target="_blank">Angular UI router</a> and tabs to move to different screens, and I wanted to learn how to use the tabs. I had to struggle a bit, but I got the tabs working, which was a feeling of accomplishment for me.</p><p>This past week I also improved my <a href="https://portfolium.com/" target="_blank">Portfolium</a> entry by adding some class projects, and then I was notified that my ChipotleMapper project was a staff pick and would be featured on the main <a href="https://portfolium.com/" target="_blank">Portfolium</a> discover page! I guess the staff really likes Mexican food!</p><p>The guest speaker this week was Justin Mealey, a very knowledgeable software developer who is also the CEO of <a href="http://pleenq.com" target="_blank">Pleenq</a>, a company that provides the capability to link to a Website from any part of an image on a Web page. He gave us a coding exercise that involved using the <a href="http://www.createjs.com/easeljs" target="_blank">EaselJS</a> framework to highlight an image and then click the highlighting to link to a Website. This was a challenge, to learn a framework that I had never used before, and try to understand how to use it to accomplish a task. I was able to complete the task partially but not completely in the allotted time; actually nobody in the class completed it, although some came close. It was a useful exercise to try to learn a new tool and understand how to use it, just from reading the documentation and playing around with the tool.</p><p>Finally, yesterday I attended <a href="http://coderetreat.org/events/global-day-of-code-retreat-san-diego-ca-hosted-by-pluralsight" target="_blank">Code Retreat</a>, hosted by <a href="https://preview.pluralsight.com/" target="_blank">Pluralsight</a>. This event was described in the email that I first received about it as a &#8220;<span class="s1">day-long, intensive practice event, focusing on the fundamentals of software development and design&#8221;. It certainly sounded like it would be worth it to devote an entire Saturday to it, and it was! I had the opportunity to talk to software developers, and practice test-driven development with pair programming and mob programming to implement <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" target="_blank">Conway&#8217;s Game of Life</a> (it&#8217;s not the board game!).</span></p><br /><a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/kdssnyder.wordpress.com/81/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/kdssnyder.wordpress.com/81/" /></a><img alt="" border="0" src="https://pixel.wp.com/b.gif?host=kdssnyder.wordpress.com&#038;blog=101346606&#038;post=81&#038;subd=kdssnyder&#038;ref=&#038;feed=1" width="1" height="1" />]]>
            </content:encoded>
            <wfw:commentRss>https://kdssnyder.wordpress.com/2015/11/15/eighth-week-in-coding-bootcamp-group-project-with-mob-programming-and-pair-programming/feed/</wfw:commentRss>
            <slash:comments>0</slash:comments>
            <media:content url="https://2.gravatar.com/avatar/ea7b7ac75f0e1b895abfbc3f9b76ebdf?s=96&#38;d=identicon&#38;r=G" medium="image">
                <media:title type="html">kdssnyder</media:title>
            </media:content>
        </item>               
    </channel>
</rss>
